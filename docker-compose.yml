version: '3.9'

services:
  beat:
    image: ${IMAGE}:${TAG}
    restart: always
    expose:
      - ${PORT}
    networks:
      - traefik-net
      - beat
    environment:
      LISTEN_ADDR: ":${PORT}"
      ORIGIN: ${ORIGIN:-https://${DEPLOY_HOST}}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      POLLING_URL: ${POLLING_URL}
    depends_on:
      redis:
        condition: service_healthy
    labels:
      traefik.enable: true
      traefik.docker.network: traefik-net
      traefik.http.routers.beat.rule: 'Host(`${DEPLOY_HOST}`) && PathPrefix(`${PATH_PREFIX}`)'
      traefik.http.routers.beat.entrypoints: https
      traefik.http.routers.beat.tls: true
      traefik.http.routers.beat.tls.certresolver: letsencrypt
      traefik.http.services.beat.loadBalancer.server.port: ${PORT}
      traefik.http.middlewares.beat-stripprefix.stripprefix.prefixes: ${PATH_PREFIX}
      traefik.http.middlewares.beat-compress.compress: true
      traefik.http.middlewares.cors-headers.headers.customresponseheaders.access-control-allow-origin: '*'
      traefik.http.routers.beat.middlewares: beat-stripprefix,beat-compress
    healthcheck:
      test: ["CMD", "/usr/bin/beat", "--health"]
      interval: 10s
      retries: 3
      timeout: 1s
      start_period: 5s
    logging:
      driver: json-file
      options:
        max-size: 10m

  redis:
    image: redis:7-alpine
    restart: always
    expose:
      - ${REDIS_PORT}
    volumes:
      - redis-data:/data:rw
    networks:
      - beat
    healthcheck:
      test: redis-cli ping && test "$$(redis-cli ping)" == "PONG"
      interval: 10s
      retries: 3
      timeout: 1s
      start_period: 5s
    logging:
      driver: json-file
      options:
        max-size: 10m

networks:
  traefik-net:
    external: true
    name: traefik-net
  beat:

volumes:
  redis-data:
